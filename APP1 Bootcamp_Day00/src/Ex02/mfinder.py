from re import match # Импортируем функцию match из модуля re для работы с регулярными выражениями.
from sys import stdin # Импортируем stdin из модуля sys для чтения данных из стандартного ввода.


def _read_ascii_image_from_stdin() -> list[str]: # Определяем функцию _read_ascii_image_from_stdin, которая будет считывать ASCII-картинку из ввода.
    nlines: int = 1 # Переменная nlines отслеживает количество строк, чтобы не допустить больше трех.
    ascii_image: list[str] = [] # Создаем пустой список ascii_image для хранения строк изображения.
    for line in stdin: # Начинаем цикл, который считывает строки из ввода.
        if nlines > 3: # Если строк больше трех, вызываем ошибку.
            raise ValueError(f"The number of lines ({nlines}) exceeds 3 lines") # Сообщение об ошибке, если строк больше трех.
        line_ = line.strip()  # Удаляем пробелы по краям строки.
        if " " in line_: # Если в строке есть пробелы, удаляем их.
            line_ = "".join(line_.split()) # Объединяем части строки без пробелов.
        if len(line_) != 5: # Проверяем, что длина строки составляет ровно пять символов.
            raise ValueError(f"The line '{line_}' does not consist of 5 items") # Вызываем ошибку, если длина строки не равна пяти.
        ascii_image.append(line_) # Добавляем строку в список ascii_image.
        nlines += 1 # Увеличиваем счетчик строк на один.
    return ascii_image # Возвращаем список строк изображения.


def _has_m_letter(image: list[str]) -> bool: # Определяем функцию _has_m_letter, которая проверяет наличие буквы "M" в изображении.
    line1, line2, line3 = image # Извлекаем первую, вторую и третью строки изображения.
    if ( # Проверяем, соответствует ли изображение первому варианту буквы "M".
        match(r"^[^*]{3}\*\*$", line1) # Первая строка имеет три произвольных символа, за которыми идут две звезды.
        and match(r"^\*[^*]\*{3}$", line2) # Вторая строка имеет звезду, затем произвольный символ и три звезды.
        and match(r"^[^*]\*[^*]\*{2}$", line3) # Третья строка имеет произвольный символ, звезду, произвольный символ и две звезды.
    ):
        return True  # Если этот вариант соответствует, возвращаем True.
    if ( # Проверяем, соответствует ли изображение второму варианту буквы "M".
        match(r"^\*[^*]{3}\*$", line1) # Первая строка имеет звезду, три произвольных символа и еще одну звезду.
        and match(r"^\*{2}[^*]\*{2}$", line2) # Вторая строка имеет две звезды, затем произвольный символ и две звезды.
        and match(r"^\*[^*]\*[^*]\*$", line3) # Третья строка имеет звезду, произвольный символ, звезду, произвольный символ и звезду.
    ):
        return True # Если этот вариант соответствует, возвращаем True.
    if ( # Проверяем, соответствует ли изображение третьему варианту буквы "M".
        match(r"^\*{2}[^*]{3}$", line1) # Первая строка имеет две звезды, за которыми следуют три произвольных символа.
        and match(r"^\*{3}[^*]\*$", line2) # Вторая строка имеет три звезды, затем произвольный символ и еще одна звезда.
        and match(r"^\*{2}[^*]\*[^*]$", line3) # Третья строка имеет две звезды, затем произвольный символ, звезду и произвольный символ.
    ):
        return True # Если этот вариант соответствует, возвращаем True.
    return False # Если изображение не подходит ни под один из вариантов, возвращаем False.


def main() -> None: # Определяем основную функцию main, которая будет выполнять основную логику программы.
    """The main entry point."""

    img: list[str] = _read_ascii_image_from_stdin()  # Читаем ASCII-изображение, используя функцию _read_ascii_image_from_stdin.
    print(_has_m_letter(img)) # Печатаем результат проверки на наличие буквы "M" в изображении.


if __name__ == "__main__": # Проверяем, запускается ли скрипт напрямую, а не импортируется.
    try: # Начинаем блок обработки исключений для управления ошибками.
        main() # Вызываем основную функцию main.
    except Exception as err: # Ловим любые исключения, которые могут возникнуть.
        print(f"Error: {err}") # Печатаем сообщение об ошибке, если что-то пошло не так